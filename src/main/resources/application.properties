# 应用名称
spring.application.name=sharding-practice


server.port=8098

# 数据源 ds0,ds1
spring.shardingsphere.datasource.names=ds0
# 第一个数据库
spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://localhost:3306/sharding_practice?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8&characterSetResults=utf8&useSSL=false&verifyServerCertificate=false&autoReconnct=true&autoReconnectForPools=true&allowMultiQueries=true
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=123456

## 第二个数据库
#spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://192.168.133.134:3306/ds1?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8&characterSetResults=utf8&useSSL=false&verifyServerCertificate=false&autoReconnct=true&autoReconnectForPools=true&allowMultiQueries=true
#spring.shardingsphere.datasource.ds1.username=root
#spring.shardingsphere.datasource.ds1.password=root

# 水平拆分的数据库（表） 配置分库 + 分表策略 行表达式分片策略
# 分库策略
#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=order_no
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{order_no % 2}

# 分表策略 其中t_order为逻辑表 分表主要取决于order_id行
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds$->{0}.t_order$->{0..1}
spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_no
spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_no
# 分片算法表达式
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order$->{order_no % 2}


spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=ds$->{0}.t_user$->{0..1}
spring.shardingsphere.sharding.tables.t_user.key-generator.column=user_id
spring.shardingsphere.sharding.tables.t_uesr.key-generator.type=SNOWFLAKE
# 强制路由
#spring.shardingsphere.sharding.tables.t_order.database-strategy.hint.algorithm-class-name=com.eqshen.shardingpractice.algorithm.UserHintAlgorithm
spring.shardingsphere.sharding.tables.t_user.table-strategy.hint.algorithm-class-name=com.eqshen.shardingpractice.algorithm.UserHintAlgorithm


# 打印执行的数据库以及语句
spring.shardingsphere.props.sql.show=true
spring.main.allow-bean-definition-overriding=true


# mybatis-plus
mybatis-plus.mapper-locations=classpath:/mapper/*.xml
mybatis-plus.configuration.jdbc-type-for-null='null'